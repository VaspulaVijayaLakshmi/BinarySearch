Given a non-negative integer x, compute and return the square root of x.

Since the return type is an integer, the decimal digits are truncated, and only the 
integer part of the result is returned.

Note: You are not allowed to use any built-in exponent function or operator, 
such as pow(x, 0.5) or x ** 0.5.

 

Example 1:

Input: x = 4
Output: 2


Example 2:

Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since the decimal 
part is truncated, 2 is returned.




class Solution {
public:
    int mySqrt(int x) {
        
      long  long strt=1,end=x/2;
        
        if(x==0 || x==1) return x;
        
    long long ans=0;
        while(strt<=end){
           
            int mid=strt+(end-strt)/2;
            
            if(mid==x/mid) return mid;
            
            if(mid>x/mid) end=mid-1;
            
            else if(mid<x/mid) {
                ans=mid;
                strt=mid+1;
            }
            
        }
        return ans;
    }
};
