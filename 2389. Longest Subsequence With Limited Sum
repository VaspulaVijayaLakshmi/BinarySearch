class Solution {
public:
    vector<int> answerQueries(vector<int>& nums, vector<int>& queries) {

        sort(nums.begin(),nums.end());

        //prefix sum
        for(int i=1;i<nums.size();i++){
            nums[i]+=nums[i-1];
        }

        vector<int> res(queries.size(),0);


        //queries
        for(int i=0;i<queries.size();i++){

        int sum=queries[i];   

        //BS
        int l=0,h=nums.size()-1;
        int elements =-1;
        while(l<=h){

            int m=l+(h-l)/2;

            if(nums[m]>sum) h=m-1;
            else {
                elements = m;
                l=m+1;
            }
             

        }

        res[i] = elements==-1 ? 0:elements+1 ;

        }

        return res;     
    }
};


// i can do sorting as order doesnt matter here

// nums = [4,5,2,1], queries = [3,10,21]

// sort:
// [1,2,4,5]

// prefix sum:
// [1,3,7,12]

// queries - [3,10,21]
// so I wil do BS

// on queuries if sum<=queries[i]
// then try going as right as poosible.
